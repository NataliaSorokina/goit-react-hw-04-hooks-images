{"version":3,"sources":["App.styled.js","API-service/API-service.js","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.js","components/ImageGallery/ImageGallery.styled.js","components/ImageGalleryItem/ImageGalleryItem.styled.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.styled.js","components/Button/Button.js","components/Loader/Loader.styled.js","components/Loader/Loader.js","components/Modal/Modal.styled.js","components/Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["AppComponent","styled","div","axios","defaults","baseURL","params","key","image_type","orientation","fetchImages","searchQuery","page","per_page","a","get","q","then","response","data","propTypes","PropTypes","array","number","Header","header","SearchForm","form","SearchBtn","button","SearchBtnLabel","span","Input","input","SearchImages","onFormSubmit","useState","setSearchQuery","onSubmit","event","preventDefault","trim","toast","error","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","List","ul","ListItem","li","ListItemImage","img","ImageGalleryItem","onSelect","image","webformatURL","tags","onClick","src","alt","ImageGallery","images","map","id","LoadButton","Button","LoaderContainer","ReactLoader","color","height","width","timeout","Overlay","ModalWindow","Modal","onClose","fullImage","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","target","largeImageURL","App","setPage","totalImages","setTotalImages","setImages","searchStatus","setSearchStatus","largeImage","setLargeImage","showModal","setShowModal","handleModalToggle","handleScroll","scrollTo","top","document","documentElement","scrollHeight","behavior","result","hits","totalHits","length","prevState","console","log","getImages","shouldRenderButton","Loader","autoClose","object","func","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4009b614.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const AppComponent = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 16px;\n  padding-bottom: 24px;\n`;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\naxios.defaults.baseURL = 'https://pixabay.com/api/';\naxios.defaults.params = {\n  key: '22624965-297697bc75a5089bebc4e5f11',\n  image_type: 'photo',\n  orientation: 'horizontal',\n};\n\nexport const fetchImages = async (searchQuery, page, per_page) => {\n  return await axios\n    .get('', {\n      params: { q: searchQuery, page, per_page },\n    })\n    .then(response => response.data);\n};\n\nfetchImages.propTypes = {\n  searchQuery: PropTypes.array,\n  page: PropTypes.number,\n  per_page: PropTypes.number,\n};\n","import styled from '@emotion/styled';\n\nexport const Header = styled.header`\n  display: flex;\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  justify-content: center;\n  align-items: center;\n  min-height: 60px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 3px;\n  padding-bottom: 3px;\n  color: #fff;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchBtn = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchBtnLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n`;\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport {\n  Header,\n  SearchForm,\n  SearchBtn,\n  SearchBtnLabel,\n  Input,\n} from './Searchbar.styled';\n\nexport default function SearchImages({ onFormSubmit }) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleSearchQuery = event => {\n    setSearchQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (searchQuery.trim() === '') {\n      toast.error('Enter search query!');\n      return;\n    }\n    onFormSubmit(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <Header>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchBtn type=\"submit\">\n          <SearchBtnLabel>Search</SearchBtnLabel>\n        </SearchBtn>\n\n        <Input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={searchQuery}\n          onChange={handleSearchQuery}\n        />\n      </SearchForm>\n    </Header>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const ListItemImage = styled.img`\n  width: 100%;\n  height: 190px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListItem, ListItemImage } from './ImageGalleryItem.styled';\n\nfunction ImageGalleryItem({ onSelect, image }) {\n  const { webformatURL, tags } = image;\n  return (\n    <ListItem onClick={onSelect}>\n      <ListItemImage src={webformatURL} alt={tags} />\n    </ListItem>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.object,\n  onClick: PropTypes.func,\n};\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { List } from './ImageGallery.styled';\nimport ImageGalleryItem from 'components/ImageGalleryItem/ImageGalleryItem';\n\nfunction ImageGallery({ images, onSelect }) {\n  return (\n    <List>\n      {images.map((image, id) => (\n        <ImageGalleryItem\n          key={id}\n          image={image}\n          onSelect={() => onSelect(image)}\n        />\n      ))}\n    </List>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object),\n  onSelect: PropTypes.func,\n};\n\nexport default ImageGallery;\n","import styled from '@emotion/styled';\n\nexport const LoadButton = styled.button`\n  display: block;\n  min-width: 180px;\n  margin: 5px auto;\n  padding: 8px 16px;\n  border: 0;\n  border-radius: 5px;\n  cursor: pointer;\n  color: #fff;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  text-decoration: none;\n  font-family: inherit;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 24px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { LoadButton } from './Button.styled';\n\nfunction Button({ onClick }) {\n  return (\n    <LoadButton type=\"button\" onClick={onClick}>\n      Load more\n    </LoadButton>\n  );\n}\n\nexport default Button;\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const LoaderContainer = styled.div`\n  position: fixed;\n  top: 97%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.styled';\n// import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nfunction ReactLoader() {\n  return (\n    <LoaderContainer>\n      <Loader\n        type=\"ThreeDots\"\n        color=\"#00BFFF\"\n        height={80}\n        width={80}\n        timeout={3000}\n      />\n    </LoaderContainer>\n  );\n}\n\nexport default ReactLoader;\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalWindow = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n","import { useEffect } from 'react';\nimport { Overlay, ModalWindow } from './Modal.styled';\nimport PropTypes from 'prop-types';\n\nexport default function Modal({ onClose, fullImage }) {\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = event => {\n    if (event.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return (\n    <Overlay onClick={handleBackdropClick}>\n      <ModalWindow>\n        <img src={fullImage.largeImageURL} alt={fullImage.tags} />\n      </ModalWindow>\n    </Overlay>\n  );\n}\n\nOverlay.propTypes = {\n  fullImage: PropTypes.object,\n  onClose: PropTypes.func,\n};\n","import { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { AppComponent } from './App.styled.js';\nimport { fetchImages } from 'API-service/API-service';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport ImageGallery from 'components/ImageGallery/ImageGallery';\nimport Button from 'components/Button/Button';\nimport Loader from 'components/Loader/Loader';\nimport Modal from 'components/Modal/Modal';\n\nexport default function App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [page, setPage] = useState(1);\n  const [per_page/* , setPer_page */] = useState(12);\n  const [totalImages, setTotalImages] = useState(0);\n  const [images, setImages] = useState([]);\n  const [searchStatus, setSearchStatus] = useState('idle');\n  const [largeImage, setLargeImage] = useState('');\n  const [showModal, setShowModal] = useState(false);\n\n\n  const handleFormSubmit = searchQuery => {\n    setSearchQuery(searchQuery);\n    setPage(1);\n    setImages([]);\n  };\n\n  const handlePageIncrement = () => {\n    setPage(prevState => prevState + 1);\n  };\n\n  const handleModalToggle = () => {  \n    setShowModal(!showModal);\n  };\n\n  const handleLargeImage = (fullImage) => {\n    setLargeImage(fullImage);    \n    handleModalToggle();\n  };\n  \n  const handleScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  useEffect(() => {\n    async function getImages() {\n      try {\n        if (searchQuery === '') {\n        return;\n      }\n        setSearchStatus('pending');\n        const result = await fetchImages(searchQuery, page, per_page);\n        const { hits, totalHits } = result;\n        if (hits.length === 0) {\n          toast.error(\n            `Sorry, there are no images matching your search query '${searchQuery}'. Please try again.`,\n          );\n          return;\n        }\n        if (hits.length > 0 && page === 1) {\n          toast(`${totalHits} images found.`);\n        }\n        if (totalHits < page * per_page) {\n          toast('Sorry, but you have reached the end of search results.');\n        }\n        \n        setSearchStatus('resolved');\n        setImages(prevState => [...prevState, ...hits]);\n        setTotalImages(totalHits);\n        handleScroll();   \n      } catch (error) {\n        setSearchStatus('rejected');\n        toast.error('Error. We are sorry, but something went wrong.');\n        console.log(error);\n      }\n        \n    }\n     getImages();\n  }, [searchQuery, page, per_page]);\n  \n  const shouldRenderButton =\n    totalImages > per_page && searchStatus !== 'pending';\n  \n    return (\n      <AppComponent>\n        <Searchbar onFormSubmit={handleFormSubmit} />\n        {searchStatus === 'pending' && <Loader />}\n        {images.length > 0 && (\n          <ImageGallery images={images} onSelect={handleLargeImage} />\n        )}\n        {shouldRenderButton && <Button onClick={handlePageIncrement} />}\n        {showModal && (\n          <Modal fullImage={largeImage} onClose={handleModalToggle} />\n        )}\n        <ToastContainer autoClose={3000} />\n      </AppComponent>\n    );\n  }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}